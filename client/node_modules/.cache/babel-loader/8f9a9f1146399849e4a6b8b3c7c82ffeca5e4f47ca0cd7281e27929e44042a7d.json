{"ast":null,"code":"import axios from 'axios';\nimport authService from './authService';\n\n// Create axios instance with auth headers\nconst api = axios.create({\n  baseURL: process.env.REACT_APP_API_URL || 'http://localhost:5000/api',\n  timeout: 10000,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Add auth token to requests\napi.interceptors.request.use(config => {\n  const token = authService.getToken();\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n});\nclass LessonService {\n  // Get all lessons with optional filters\n  async getLessons(filters = {}) {\n    try {\n      const params = new URLSearchParams();\n      if (filters.language) params.append('language', filters.language);\n      if (filters.level) params.append('level', filters.level);\n      if (filters.category) params.append('category', filters.category);\n      if (filters.page) params.append('page', filters.page);\n      if (filters.limit) params.append('limit', filters.limit);\n      const response = await api.get(`/lessons?${params.toString()}`);\n      return response.data;\n    } catch (error) {\n      console.error('Get lessons error:', error);\n      throw error;\n    }\n  }\n\n  // Get lesson by ID\n  async getLessonById(id) {\n    try {\n      const response = await api.get(`/lessons/${id}`);\n      return response.data;\n    } catch (error) {\n      console.error('Get lesson by ID error:', error);\n      throw error;\n    }\n  }\n\n  // Search lessons\n  async searchLessons(query) {\n    try {\n      const response = await api.get(`/lessons/search?q=${encodeURIComponent(query)}`);\n      return response.data;\n    } catch (error) {\n      console.error('Search lessons error:', error);\n      throw error;\n    }\n  }\n\n  // Start a lesson\n  async startLesson(lessonId) {\n    try {\n      const response = await api.post(`/lessons/${lessonId}/start`);\n      return response.data;\n    } catch (error) {\n      console.error('Start lesson error:', error);\n      throw error;\n    }\n  }\n\n  // Complete a lesson\n  async completeLesson(lessonId, score = 0) {\n    try {\n      const response = await api.post(`/lessons/${lessonId}/complete`, {\n        score\n      });\n      return response.data;\n    } catch (error) {\n      console.error('Complete lesson error:', error);\n      throw error;\n    }\n  }\n\n  // Update lesson progress\n  async updateProgress(lessonId, progressData) {\n    try {\n      const response = await api.put(`/lessons/${lessonId}/progress`, progressData);\n      return response.data;\n    } catch (error) {\n      console.error('Update lesson progress error:', error);\n      throw error;\n    }\n  }\n\n  // Get lesson stats\n  async getLessonStats(lessonId) {\n    try {\n      const response = await api.get(`/lessons/${lessonId}/stats`);\n      return response.data;\n    } catch (error) {\n      console.error('Get lesson stats error:', error);\n      throw error;\n    }\n  }\n\n  // Rate a lesson\n  async rateLesson(lessonId, rating) {\n    try {\n      const response = await api.post(`/lessons/${lessonId}/rate`, {\n        rating\n      });\n      return response.data;\n    } catch (error) {\n      console.error('Rate lesson error:', error);\n      throw error;\n    }\n  }\n\n  // Get recommended lessons\n  async getRecommendedLessons(limit = 10) {\n    try {\n      const response = await api.get(`/lessons/recommended?limit=${limit}`);\n      return response.data;\n    } catch (error) {\n      console.error('Get recommended lessons error:', error);\n      throw error;\n    }\n  }\n\n  // Get lessons by category\n  async getLessonsByCategory(category) {\n    try {\n      const response = await api.get(`/lessons/category/${category}`);\n      return response.data;\n    } catch (error) {\n      console.error('Get lessons by category error:', error);\n      throw error;\n    }\n  }\n\n  // Get lesson prerequisites\n  async getLessonPrerequisites(lessonId) {\n    try {\n      const response = await api.get(`/lessons/${lessonId}/prerequisites`);\n      return response.data;\n    } catch (error) {\n      console.error('Get lesson prerequisites error:', error);\n      throw error;\n    }\n  }\n\n  // Check if user can access lesson\n  async canAccessLesson(lessonId) {\n    try {\n      const response = await api.get(`/lessons/${lessonId}/access`);\n      return response.data;\n    } catch (error) {\n      console.error('Check lesson access error:', error);\n      throw error;\n    }\n  }\n}\nconst lessonService = new LessonService();\nexport default lessonService;","map":{"version":3,"names":["axios","authService","api","create","baseURL","process","env","REACT_APP_API_URL","timeout","headers","interceptors","request","use","config","token","getToken","Authorization","LessonService","getLessons","filters","params","URLSearchParams","language","append","level","category","page","limit","response","get","toString","data","error","console","getLessonById","id","searchLessons","query","encodeURIComponent","startLesson","lessonId","post","completeLesson","score","updateProgress","progressData","put","getLessonStats","rateLesson","rating","getRecommendedLessons","getLessonsByCategory","getLessonPrerequisites","canAccessLesson","lessonService"],"sources":["C:/language-learning-app/client/src/services/lessonService.js"],"sourcesContent":["import axios from 'axios';\r\nimport authService from './authService';\r\n\r\n// Create axios instance with auth headers\r\nconst api = axios.create({\r\n  baseURL: process.env.REACT_APP_API_URL || 'http://localhost:5000/api',\r\n  timeout: 10000,\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  },\r\n});\r\n\r\n// Add auth token to requests\r\napi.interceptors.request.use((config) => {\r\n  const token = authService.getToken();\r\n  if (token) {\r\n    config.headers.Authorization = `Bearer ${token}`;\r\n  }\r\n  return config;\r\n});\r\n\r\nclass LessonService {\r\n  // Get all lessons with optional filters\r\n  async getLessons(filters = {}) {\r\n    try {\r\n      const params = new URLSearchParams();\r\n      \r\n      if (filters.language) params.append('language', filters.language);\r\n      if (filters.level) params.append('level', filters.level);\r\n      if (filters.category) params.append('category', filters.category);\r\n      if (filters.page) params.append('page', filters.page);\r\n      if (filters.limit) params.append('limit', filters.limit);\r\n      \r\n      const response = await api.get(`/lessons?${params.toString()}`);\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('Get lessons error:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  // Get lesson by ID\r\n  async getLessonById(id) {\r\n    try {\r\n      const response = await api.get(`/lessons/${id}`);\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('Get lesson by ID error:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  // Search lessons\r\n  async searchLessons(query) {\r\n    try {\r\n      const response = await api.get(`/lessons/search?q=${encodeURIComponent(query)}`);\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('Search lessons error:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  // Start a lesson\r\n  async startLesson(lessonId) {\r\n    try {\r\n      const response = await api.post(`/lessons/${lessonId}/start`);\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('Start lesson error:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  // Complete a lesson\r\n  async completeLesson(lessonId, score = 0) {\r\n    try {\r\n      const response = await api.post(`/lessons/${lessonId}/complete`, { score });\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('Complete lesson error:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  // Update lesson progress\r\n  async updateProgress(lessonId, progressData) {\r\n    try {\r\n      const response = await api.put(`/lessons/${lessonId}/progress`, progressData);\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('Update lesson progress error:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  // Get lesson stats\r\n  async getLessonStats(lessonId) {\r\n    try {\r\n      const response = await api.get(`/lessons/${lessonId}/stats`);\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('Get lesson stats error:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  // Rate a lesson\r\n  async rateLesson(lessonId, rating) {\r\n    try {\r\n      const response = await api.post(`/lessons/${lessonId}/rate`, { rating });\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('Rate lesson error:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  // Get recommended lessons\r\n  async getRecommendedLessons(limit = 10) {\r\n    try {\r\n      const response = await api.get(`/lessons/recommended?limit=${limit}`);\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('Get recommended lessons error:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  // Get lessons by category\r\n  async getLessonsByCategory(category) {\r\n    try {\r\n      const response = await api.get(`/lessons/category/${category}`);\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('Get lessons by category error:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  // Get lesson prerequisites\r\n  async getLessonPrerequisites(lessonId) {\r\n    try {\r\n      const response = await api.get(`/lessons/${lessonId}/prerequisites`);\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('Get lesson prerequisites error:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  // Check if user can access lesson\r\n  async canAccessLesson(lessonId) {\r\n    try {\r\n      const response = await api.get(`/lessons/${lessonId}/access`);\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('Check lesson access error:', error);\r\n      throw error;\r\n    }\r\n  }\r\n}\r\n\r\nconst lessonService = new LessonService();\r\nexport default lessonService;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}