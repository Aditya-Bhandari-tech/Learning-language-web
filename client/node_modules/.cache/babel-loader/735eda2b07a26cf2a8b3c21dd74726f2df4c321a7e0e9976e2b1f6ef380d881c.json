{"ast":null,"code":"var _jsxFileName = \"C:\\\\language-learning-app\\\\client\\\\src\\\\pages\\\\Quiz.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useContext } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { AuthContext } from '../contexts/AuthContext';\nimport { LearningContext } from '../contexts/LearningContext';\nimport '../styles/Quiz.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Quiz = () => {\n  _s();\n  const {\n    user\n  } = useContext(AuthContext);\n  const {\n    updateProgress\n  } = useContext(LearningContext);\n  const navigate = useNavigate();\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n  const [score, setScore] = useState(0);\n  const [showResult, setShowResult] = useState(false);\n  const [selectedAnswer, setSelectedAnswer] = useState(null);\n  const [isCorrect, setIsCorrect] = useState(null);\n  const [timeLeft, setTimeLeft] = useState(30);\n  const [quizCompleted, setQuizCompleted] = useState(false);\n  const [loading, setLoading] = useState(true);\n\n  // Sample quiz questions - in a real app, these would come from the API\n  const [questions] = useState([{\n    id: 1,\n    question: \"What does 'Bonjour' mean in English?\",\n    options: [\"Goodbye\", \"Hello\", \"Thank you\", \"Please\"],\n    correctAnswer: 1,\n    explanation: \"Bonjour is the French word for 'Hello'\"\n  }, {\n    id: 2,\n    question: \"Which of these is the Spanish word for 'house'?\",\n    options: [\"Casa\", \"Perro\", \"Libro\", \"Agua\"],\n    correctAnswer: 0,\n    explanation: \"Casa means 'house' in Spanish\"\n  }, {\n    id: 3,\n    question: \"What is the German word for 'bread'?\",\n    options: [\"Wasser\", \"Brot\", \"KÃ¤se\", \"Fleisch\"],\n    correctAnswer: 1,\n    explanation: \"Brot is the German word for 'bread'\"\n  }, {\n    id: 4,\n    question: \"Which Italian word means 'good'?\",\n    options: [\"Male\", \"Bene\", \"Cattivo\", \"Grande\"],\n    correctAnswer: 1,\n    explanation: \"Bene means 'good' in Italian\"\n  }, {\n    id: 5,\n    question: \"What does 'Arigato' mean in Japanese?\",\n    options: [\"Hello\", \"Goodbye\", \"Thank you\", \"Please\"],\n    correctAnswer: 2,\n    explanation: \"Arigato means 'Thank you' in Japanese\"\n  }]);\n  useEffect(() => {\n    setLoading(false);\n  }, []);\n  useEffect(() => {\n    if (!showResult && timeLeft > 0) {\n      const timer = setTimeout(() => setTimeLeft(timeLeft - 1), 1000);\n      return () => clearTimeout(timer);\n    } else if (timeLeft === 0 && !showResult) {\n      handleAnswer(null);\n    }\n  }, [timeLeft, showResult]);\n  const handleAnswer = selectedIndex => {\n    const question = questions[currentQuestion];\n    const correct = selectedIndex === question.correctAnswer;\n    setSelectedAnswer(selectedIndex);\n    setIsCorrect(correct);\n    if (correct) {\n      setScore(score + 1);\n    }\n    setTimeout(() => {\n      if (currentQuestion < questions.length - 1) {\n        setCurrentQuestion(currentQuestion + 1);\n        setSelectedAnswer(null);\n        setIsCorrect(null);\n        setTimeLeft(30);\n      } else {\n        setShowResult(true);\n        setQuizCompleted(true);\n        // Update progress\n        const progressData = {\n          quizCompleted: true,\n          score: correct ? score + 1 : score,\n          totalQuestions: questions.length,\n          percentage: (correct ? score + 1 : score) / questions.length * 100\n        };\n        updateProgress(progressData);\n      }\n    }, 2000);\n  };\n  const restartQuiz = () => {\n    setCurrentQuestion(0);\n    setScore(0);\n    setShowResult(false);\n    setSelectedAnswer(null);\n    setIsCorrect(null);\n    setTimeLeft(30);\n    setQuizCompleted(false);\n  };\n  const getOptionClass = index => {\n    if (selectedAnswer === null) return 'quiz-option';\n    if (index === questions[currentQuestion].correctAnswer) return 'quiz-option correct';\n    if (selectedAnswer === index && index !== questions[currentQuestion].correctAnswer) return 'quiz-option incorrect';\n    return 'quiz-option';\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"quiz-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading-spinner\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"spinner\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Loading quiz...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this);\n  }\n  if (showResult) {\n    const percentage = score / questions.length * 100;\n    const getResultMessage = () => {\n      if (percentage >= 80) return \"Excellent! You're a language master!\";\n      if (percentage >= 60) return \"Good job! Keep practicing!\";\n      if (percentage >= 40) return \"Not bad! You're making progress!\";\n      return \"Keep studying! Practice makes perfect!\";\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"quiz-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"quiz-result\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Quiz Complete!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"result-stats\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stat-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"stat-number\",\n              children: score\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"stat-label\",\n              children: \"Correct Answers\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stat-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"stat-number\",\n              children: questions.length\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"stat-label\",\n              children: \"Total Questions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stat-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"stat-number\",\n              children: [percentage.toFixed(0), \"%\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"stat-label\",\n              children: \"Score\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"result-message\",\n          children: getResultMessage()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"result-actions\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: restartQuiz,\n            className: \"btn btn-primary\",\n            children: \"Try Again\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => navigate('/dashboard'),\n            className: \"btn btn-secondary\",\n            children: \"Back to Dashboard\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }, this);\n  }\n  const question = questions[currentQuestion];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"quiz-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"quiz-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"quiz-progress\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"progress-text\",\n          children: [\"Question \", currentQuestion + 1, \" of \", questions.length]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"progress-bar\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"progress-fill\",\n            style: {\n              width: `${(currentQuestion + 1) / questions.length * 100}%`\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"quiz-timer\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"timer-circle\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"timer-text\",\n            children: [timeLeft, \"s\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"quiz-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"question-text\",\n        children: question.question\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"options-container\",\n        children: question.options.map((option, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n          className: getOptionClass(index),\n          onClick: () => handleAnswer(index),\n          disabled: selectedAnswer !== null,\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"option-letter\",\n            children: String.fromCharCode(65 + index)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"option-text\",\n            children: option\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 9\n      }, this), selectedAnswer !== null && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `feedback ${isCorrect ? 'correct' : 'incorrect'}`,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"feedback-icon\",\n          children: isCorrect ? 'â' : 'â'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"feedback-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: isCorrect ? 'Correct!' : 'Incorrect!'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: question.explanation\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"quiz-footer\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"score-display\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"Score: \", score, \"/\", questions.length]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 177,\n    columnNumber: 5\n  }, this);\n};\n_s(Quiz, \"vF5X5avrE4qYxaiUKdudnISeVqo=\", false, function () {\n  return [useNavigate];\n});\n_c = Quiz;\nexport default Quiz;\nvar _c;\n$RefreshReg$(_c, \"Quiz\");","map":{"version":3,"names":["React","useState","useEffect","useContext","useNavigate","AuthContext","LearningContext","jsxDEV","_jsxDEV","Quiz","_s","user","updateProgress","navigate","currentQuestion","setCurrentQuestion","score","setScore","showResult","setShowResult","selectedAnswer","setSelectedAnswer","isCorrect","setIsCorrect","timeLeft","setTimeLeft","quizCompleted","setQuizCompleted","loading","setLoading","questions","id","question","options","correctAnswer","explanation","timer","setTimeout","clearTimeout","handleAnswer","selectedIndex","correct","length","progressData","totalQuestions","percentage","restartQuiz","getOptionClass","index","className","children","fileName","_jsxFileName","lineNumber","columnNumber","getResultMessage","toFixed","onClick","style","width","map","option","disabled","String","fromCharCode","_c","$RefreshReg$"],"sources":["C:/language-learning-app/client/src/pages/Quiz.js"],"sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { AuthContext } from '../contexts/AuthContext';\r\nimport { LearningContext } from '../contexts/LearningContext';\r\nimport '../styles/Quiz.css';\r\n\r\nconst Quiz = () => {\r\n  const { user } = useContext(AuthContext);\r\n  const { updateProgress } = useContext(LearningContext);\r\n  const navigate = useNavigate();\r\n  \r\n  const [currentQuestion, setCurrentQuestion] = useState(0);\r\n  const [score, setScore] = useState(0);\r\n  const [showResult, setShowResult] = useState(false);\r\n  const [selectedAnswer, setSelectedAnswer] = useState(null);\r\n  const [isCorrect, setIsCorrect] = useState(null);\r\n  const [timeLeft, setTimeLeft] = useState(30);\r\n  const [quizCompleted, setQuizCompleted] = useState(false);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  // Sample quiz questions - in a real app, these would come from the API\r\n  const [questions] = useState([\r\n    {\r\n      id: 1,\r\n      question: \"What does 'Bonjour' mean in English?\",\r\n      options: [\"Goodbye\", \"Hello\", \"Thank you\", \"Please\"],\r\n      correctAnswer: 1,\r\n      explanation: \"Bonjour is the French word for 'Hello'\"\r\n    },\r\n    {\r\n      id: 2,\r\n      question: \"Which of these is the Spanish word for 'house'?\",\r\n      options: [\"Casa\", \"Perro\", \"Libro\", \"Agua\"],\r\n      correctAnswer: 0,\r\n      explanation: \"Casa means 'house' in Spanish\"\r\n    },\r\n    {\r\n      id: 3,\r\n      question: \"What is the German word for 'bread'?\",\r\n      options: [\"Wasser\", \"Brot\", \"KÃ¤se\", \"Fleisch\"],\r\n      correctAnswer: 1,\r\n      explanation: \"Brot is the German word for 'bread'\"\r\n    },\r\n    {\r\n      id: 4,\r\n      question: \"Which Italian word means 'good'?\",\r\n      options: [\"Male\", \"Bene\", \"Cattivo\", \"Grande\"],\r\n      correctAnswer: 1,\r\n      explanation: \"Bene means 'good' in Italian\"\r\n    },\r\n    {\r\n      id: 5,\r\n      question: \"What does 'Arigato' mean in Japanese?\",\r\n      options: [\"Hello\", \"Goodbye\", \"Thank you\", \"Please\"],\r\n      correctAnswer: 2,\r\n      explanation: \"Arigato means 'Thank you' in Japanese\"\r\n    }\r\n  ]);\r\n\r\n  useEffect(() => {\r\n    setLoading(false);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (!showResult && timeLeft > 0) {\r\n      const timer = setTimeout(() => setTimeLeft(timeLeft - 1), 1000);\r\n      return () => clearTimeout(timer);\r\n    } else if (timeLeft === 0 && !showResult) {\r\n      handleAnswer(null);\r\n    }\r\n  }, [timeLeft, showResult]);\r\n\r\n  const handleAnswer = (selectedIndex) => {\r\n    const question = questions[currentQuestion];\r\n    const correct = selectedIndex === question.correctAnswer;\r\n    \r\n    setSelectedAnswer(selectedIndex);\r\n    setIsCorrect(correct);\r\n    \r\n    if (correct) {\r\n      setScore(score + 1);\r\n    }\r\n    \r\n    setTimeout(() => {\r\n      if (currentQuestion < questions.length - 1) {\r\n        setCurrentQuestion(currentQuestion + 1);\r\n        setSelectedAnswer(null);\r\n        setIsCorrect(null);\r\n        setTimeLeft(30);\r\n      } else {\r\n        setShowResult(true);\r\n        setQuizCompleted(true);\r\n        // Update progress\r\n        const progressData = {\r\n          quizCompleted: true,\r\n          score: correct ? score + 1 : score,\r\n          totalQuestions: questions.length,\r\n          percentage: ((correct ? score + 1 : score) / questions.length) * 100\r\n        };\r\n        updateProgress(progressData);\r\n      }\r\n    }, 2000);\r\n  };\r\n\r\n  const restartQuiz = () => {\r\n    setCurrentQuestion(0);\r\n    setScore(0);\r\n    setShowResult(false);\r\n    setSelectedAnswer(null);\r\n    setIsCorrect(null);\r\n    setTimeLeft(30);\r\n    setQuizCompleted(false);\r\n  };\r\n\r\n  const getOptionClass = (index) => {\r\n    if (selectedAnswer === null) return 'quiz-option';\r\n    if (index === questions[currentQuestion].correctAnswer) return 'quiz-option correct';\r\n    if (selectedAnswer === index && index !== questions[currentQuestion].correctAnswer) return 'quiz-option incorrect';\r\n    return 'quiz-option';\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"quiz-container\">\r\n        <div className=\"loading-spinner\">\r\n          <div className=\"spinner\"></div>\r\n          <p>Loading quiz...</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (showResult) {\r\n    const percentage = (score / questions.length) * 100;\r\n    const getResultMessage = () => {\r\n      if (percentage >= 80) return \"Excellent! You're a language master!\";\r\n      if (percentage >= 60) return \"Good job! Keep practicing!\";\r\n      if (percentage >= 40) return \"Not bad! You're making progress!\";\r\n      return \"Keep studying! Practice makes perfect!\";\r\n    };\r\n\r\n    return (\r\n      <div className=\"quiz-container\">\r\n        <div className=\"quiz-result\">\r\n          <h2>Quiz Complete!</h2>\r\n          <div className=\"result-stats\">\r\n            <div className=\"stat-item\">\r\n              <span className=\"stat-number\">{score}</span>\r\n              <span className=\"stat-label\">Correct Answers</span>\r\n            </div>\r\n            <div className=\"stat-item\">\r\n              <span className=\"stat-number\">{questions.length}</span>\r\n              <span className=\"stat-label\">Total Questions</span>\r\n            </div>\r\n            <div className=\"stat-item\">\r\n              <span className=\"stat-number\">{percentage.toFixed(0)}%</span>\r\n              <span className=\"stat-label\">Score</span>\r\n            </div>\r\n          </div>\r\n          <p className=\"result-message\">{getResultMessage()}</p>\r\n          <div className=\"result-actions\">\r\n            <button onClick={restartQuiz} className=\"btn btn-primary\">\r\n              Try Again\r\n            </button>\r\n            <button onClick={() => navigate('/dashboard')} className=\"btn btn-secondary\">\r\n              Back to Dashboard\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  const question = questions[currentQuestion];\r\n\r\n  return (\r\n    <div className=\"quiz-container\">\r\n      <div className=\"quiz-header\">\r\n        <div className=\"quiz-progress\">\r\n          <span className=\"progress-text\">\r\n            Question {currentQuestion + 1} of {questions.length}\r\n          </span>\r\n          <div className=\"progress-bar\">\r\n            <div \r\n              className=\"progress-fill\" \r\n              style={{ width: `${((currentQuestion + 1) / questions.length) * 100}%` }}\r\n            ></div>\r\n          </div>\r\n        </div>\r\n        <div className=\"quiz-timer\">\r\n          <div className=\"timer-circle\">\r\n            <span className=\"timer-text\">{timeLeft}s</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"quiz-content\">\r\n        <h2 className=\"question-text\">{question.question}</h2>\r\n        \r\n        <div className=\"options-container\">\r\n          {question.options.map((option, index) => (\r\n            <button\r\n              key={index}\r\n              className={getOptionClass(index)}\r\n              onClick={() => handleAnswer(index)}\r\n              disabled={selectedAnswer !== null}\r\n            >\r\n              <span className=\"option-letter\">{String.fromCharCode(65 + index)}</span>\r\n              <span className=\"option-text\">{option}</span>\r\n            </button>\r\n          ))}\r\n        </div>\r\n\r\n        {selectedAnswer !== null && (\r\n          <div className={`feedback ${isCorrect ? 'correct' : 'incorrect'}`}>\r\n            <div className=\"feedback-icon\">\r\n              {isCorrect ? 'â' : 'â'}\r\n            </div>\r\n            <div className=\"feedback-content\">\r\n              <h4>{isCorrect ? 'Correct!' : 'Incorrect!'}</h4>\r\n              <p>{question.explanation}</p>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      <div className=\"quiz-footer\">\r\n        <div className=\"score-display\">\r\n          <span>Score: {score}/{questions.length}</span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Quiz; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}