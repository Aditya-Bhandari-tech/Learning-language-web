{"ast":null,"code":"var _jsxFileName = \"C:\\\\language-learning-app\\\\client\\\\src\\\\contexts\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useReducer, useEffect } from 'react';\nimport authService from '../services/authService';\n\n// Auth Context\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\n\n// Auth Actions\nconst AUTH_ACTIONS = {\n  SET_LOADING: 'SET_LOADING',\n  LOGIN_SUCCESS: 'LOGIN_SUCCESS',\n  LOGOUT: 'LOGOUT',\n  UPDATE_USER: 'UPDATE_USER',\n  SET_ERROR: 'SET_ERROR',\n  CLEAR_ERROR: 'CLEAR_ERROR'\n};\n\n// Auth Reducer\nconst authReducer = (state, action) => {\n  switch (action.type) {\n    case AUTH_ACTIONS.SET_LOADING:\n      return {\n        ...state,\n        loading: action.payload\n      };\n    case AUTH_ACTIONS.LOGIN_SUCCESS:\n      return {\n        ...state,\n        user: action.payload,\n        loading: false,\n        error: null\n      };\n    case AUTH_ACTIONS.LOGOUT:\n      return {\n        ...state,\n        user: null,\n        loading: false,\n        error: null\n      };\n    case AUTH_ACTIONS.UPDATE_USER:\n      return {\n        ...state,\n        user: {\n          ...state.user,\n          ...action.payload\n        },\n        error: null\n      };\n    case AUTH_ACTIONS.SET_ERROR:\n      return {\n        ...state,\n        error: action.payload,\n        loading: false\n      };\n    case AUTH_ACTIONS.CLEAR_ERROR:\n      return {\n        ...state,\n        error: null\n      };\n    default:\n      return state;\n  }\n};\n\n// Initial State\nconst initialState = {\n  user: null,\n  loading: true,\n  error: null\n};\n\n// Auth Provider Component\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [state, dispatch] = useReducer(authReducer, initialState);\n\n  // Check for existing token on app load\n  useEffect(() => {\n    const checkAuth = async () => {\n      const token = authService.getToken();\n      if (token) {\n        try {\n          dispatch({\n            type: AUTH_ACTIONS.SET_LOADING,\n            payload: true\n          });\n          const userData = await authService.getCurrentUser();\n          dispatch({\n            type: AUTH_ACTIONS.LOGIN_SUCCESS,\n            payload: userData\n          });\n        } catch (error) {\n          console.error('Auth check failed:', error);\n          authService.logout(); // Clear invalid token\n          dispatch({\n            type: AUTH_ACTIONS.LOGOUT\n          });\n        }\n      } else {\n        dispatch({\n          type: AUTH_ACTIONS.SET_LOADING,\n          payload: false\n        });\n      }\n    };\n    checkAuth();\n  }, []);\n\n  // Login function\n  const login = async (email, password) => {\n    try {\n      dispatch({\n        type: AUTH_ACTIONS.SET_LOADING,\n        payload: true\n      });\n      dispatch({\n        type: AUTH_ACTIONS.CLEAR_ERROR\n      });\n      const response = await authService.login(email, password);\n      if (response.success) {\n        dispatch({\n          type: AUTH_ACTIONS.LOGIN_SUCCESS,\n          payload: response.user\n        });\n        return {\n          success: true\n        };\n      } else {\n        dispatch({\n          type: AUTH_ACTIONS.SET_ERROR,\n          payload: response.message\n        });\n        return {\n          success: false,\n          message: response.message\n        };\n      }\n    } catch (error) {\n      var _error$response, _error$response$data;\n      const errorMessage = ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || 'Login failed. Please try again.';\n      dispatch({\n        type: AUTH_ACTIONS.SET_ERROR,\n        payload: errorMessage\n      });\n      return {\n        success: false,\n        message: errorMessage\n      };\n    }\n  };\n\n  // Register function\n  const register = async userData => {\n    try {\n      dispatch({\n        type: AUTH_ACTIONS.SET_LOADING,\n        payload: true\n      });\n      dispatch({\n        type: AUTH_ACTIONS.CLEAR_ERROR\n      });\n      const response = await authService.register(userData);\n      if (response.success) {\n        dispatch({\n          type: AUTH_ACTIONS.LOGIN_SUCCESS,\n          payload: response.user\n        });\n        return {\n          success: true\n        };\n      } else {\n        dispatch({\n          type: AUTH_ACTIONS.SET_ERROR,\n          payload: response.message\n        });\n        return {\n          success: false,\n          message: response.message\n        };\n      }\n    } catch (error) {\n      var _error$response2, _error$response2$data;\n      const errorMessage = ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || 'Registration failed. Please try again.';\n      dispatch({\n        type: AUTH_ACTIONS.SET_ERROR,\n        payload: errorMessage\n      });\n      return {\n        success: false,\n        message: errorMessage\n      };\n    }\n  };\n\n  // Logout function\n  const logout = async () => {\n    try {\n      await authService.logout();\n    } catch (error) {\n      console.error('Logout error:', error);\n    }\n    dispatch({\n      type: AUTH_ACTIONS.LOGOUT\n    });\n  };\n\n  // Update user profile\n  const updateUser = async userData => {\n    try {\n      dispatch({\n        type: AUTH_ACTIONS.CLEAR_ERROR\n      });\n      const response = await authService.updateProfile(userData);\n      if (response.success) {\n        dispatch({\n          type: AUTH_ACTIONS.UPDATE_USER,\n          payload: response.user\n        });\n        return {\n          success: true\n        };\n      } else {\n        dispatch({\n          type: AUTH_ACTIONS.SET_ERROR,\n          payload: response.message\n        });\n        return {\n          success: false,\n          message: response.message\n        };\n      }\n    } catch (error) {\n      var _error$response3, _error$response3$data;\n      const errorMessage = ((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : (_error$response3$data = _error$response3.data) === null || _error$response3$data === void 0 ? void 0 : _error$response3$data.message) || 'Profile update failed. Please try again.';\n      dispatch({\n        type: AUTH_ACTIONS.SET_ERROR,\n        payload: errorMessage\n      });\n      return {\n        success: false,\n        message: errorMessage\n      };\n    }\n  };\n\n  // Change password\n  const changePassword = async (currentPassword, newPassword) => {\n    try {\n      dispatch({\n        type: AUTH_ACTIONS.CLEAR_ERROR\n      });\n      const response = await authService.changePassword(currentPassword, newPassword);\n      if (response.success) {\n        return {\n          success: true\n        };\n      } else {\n        dispatch({\n          type: AUTH_ACTIONS.SET_ERROR,\n          payload: response.message\n        });\n        return {\n          success: false,\n          message: response.message\n        };\n      }\n    } catch (error) {\n      var _error$response4, _error$response4$data;\n      const errorMessage = ((_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : (_error$response4$data = _error$response4.data) === null || _error$response4$data === void 0 ? void 0 : _error$response4$data.message) || 'Password change failed. Please try again.';\n      dispatch({\n        type: AUTH_ACTIONS.SET_ERROR,\n        payload: errorMessage\n      });\n      return {\n        success: false,\n        message: errorMessage\n      };\n    }\n  };\n\n  // Add learning language\n  const addLearningLanguage = async (language, level = 'beginner') => {\n    try {\n      dispatch({\n        type: AUTH_ACTIONS.CLEAR_ERROR\n      });\n      const response = await authService.addLearningLanguage(language, level);\n      if (response.success) {\n        dispatch({\n          type: AUTH_ACTIONS.UPDATE_USER,\n          payload: response.user\n        });\n        return {\n          success: true\n        };\n      } else {\n        dispatch({\n          type: AUTH_ACTIONS.SET_ERROR,\n          payload: response.message\n        });\n        return {\n          success: false,\n          message: response.message\n        };\n      }\n    } catch (error) {\n      var _error$response5, _error$response5$data;\n      const errorMessage = ((_error$response5 = error.response) === null || _error$response5 === void 0 ? void 0 : (_error$response5$data = _error$response5.data) === null || _error$response5$data === void 0 ? void 0 : _error$response5$data.message) || 'Failed to add learning language. Please try again.';\n      dispatch({\n        type: AUTH_ACTIONS.SET_ERROR,\n        payload: errorMessage\n      });\n      return {\n        success: false,\n        message: errorMessage\n      };\n    }\n  };\n\n  // Remove learning language\n  const removeLearningLanguage = async language => {\n    try {\n      dispatch({\n        type: AUTH_ACTIONS.CLEAR_ERROR\n      });\n      const response = await authService.removeLearningLanguage(language);\n      if (response.success) {\n        dispatch({\n          type: AUTH_ACTIONS.UPDATE_USER,\n          payload: response.user\n        });\n        return {\n          success: true\n        };\n      } else {\n        dispatch({\n          type: AUTH_ACTIONS.SET_ERROR,\n          payload: response.message\n        });\n        return {\n          success: false,\n          message: response.message\n        };\n      }\n    } catch (error) {\n      var _error$response6, _error$response6$data;\n      const errorMessage = ((_error$response6 = error.response) === null || _error$response6 === void 0 ? void 0 : (_error$response6$data = _error$response6.data) === null || _error$response6$data === void 0 ? void 0 : _error$response6$data.message) || 'Failed to remove learning language. Please try again.';\n      dispatch({\n        type: AUTH_ACTIONS.SET_ERROR,\n        payload: errorMessage\n      });\n      return {\n        success: false,\n        message: errorMessage\n      };\n    }\n  };\n\n  // Clear error\n  const clearError = () => {\n    dispatch({\n      type: AUTH_ACTIONS.CLEAR_ERROR\n    });\n  };\n\n  // Context value\n  const value = {\n    user: state.user,\n    loading: state.loading,\n    error: state.error,\n    login,\n    register,\n    logout,\n    updateUser,\n    changePassword,\n    addLearningLanguage,\n    removeLearningLanguage,\n    clearError\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 259,\n    columnNumber: 5\n  }, this);\n};\n\n// Custom hook to use auth context\n_s(AuthProvider, \"bgCdjuTOmPdSBRwTap80EFd9Y3U=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s2(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport default AuthContext;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useReducer","useEffect","authService","jsxDEV","_jsxDEV","AuthContext","AUTH_ACTIONS","SET_LOADING","LOGIN_SUCCESS","LOGOUT","UPDATE_USER","SET_ERROR","CLEAR_ERROR","authReducer","state","action","type","loading","payload","user","error","initialState","AuthProvider","children","_s","dispatch","checkAuth","token","getToken","userData","getCurrentUser","console","logout","login","email","password","response","success","message","_error$response","_error$response$data","errorMessage","data","register","_error$response2","_error$response2$data","updateUser","updateProfile","_error$response3","_error$response3$data","changePassword","currentPassword","newPassword","_error$response4","_error$response4$data","addLearningLanguage","language","level","_error$response5","_error$response5$data","removeLearningLanguage","_error$response6","_error$response6$data","clearError","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","context","Error","$RefreshReg$"],"sources":["C:/language-learning-app/client/src/contexts/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useReducer, useEffect } from 'react';\r\nimport authService from '../services/authService';\r\n\r\n// Auth Context\r\nconst AuthContext = createContext();\r\n\r\n// Auth Actions\r\nconst AUTH_ACTIONS = {\r\n  SET_LOADING: 'SET_LOADING',\r\n  LOGIN_SUCCESS: 'LOGIN_SUCCESS',\r\n  LOGOUT: 'LOGOUT',\r\n  UPDATE_USER: 'UPDATE_USER',\r\n  SET_ERROR: 'SET_ERROR',\r\n  CLEAR_ERROR: 'CLEAR_ERROR'\r\n};\r\n\r\n// Auth Reducer\r\nconst authReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case AUTH_ACTIONS.SET_LOADING:\r\n      return {\r\n        ...state,\r\n        loading: action.payload\r\n      };\r\n\r\n    case AUTH_ACTIONS.LOGIN_SUCCESS:\r\n      return {\r\n        ...state,\r\n        user: action.payload,\r\n        loading: false,\r\n        error: null\r\n      };\r\n\r\n    case AUTH_ACTIONS.LOGOUT:\r\n      return {\r\n        ...state,\r\n        user: null,\r\n        loading: false,\r\n        error: null\r\n      };\r\n\r\n    case AUTH_ACTIONS.UPDATE_USER:\r\n      return {\r\n        ...state,\r\n        user: { ...state.user, ...action.payload },\r\n        error: null\r\n      };\r\n\r\n    case AUTH_ACTIONS.SET_ERROR:\r\n      return {\r\n        ...state,\r\n        error: action.payload,\r\n        loading: false\r\n      };\r\n\r\n    case AUTH_ACTIONS.CLEAR_ERROR:\r\n      return {\r\n        ...state,\r\n        error: null\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n// Initial State\r\nconst initialState = {\r\n  user: null,\r\n  loading: true,\r\n  error: null\r\n};\r\n\r\n// Auth Provider Component\r\nexport const AuthProvider = ({ children }) => {\r\n  const [state, dispatch] = useReducer(authReducer, initialState);\r\n\r\n  // Check for existing token on app load\r\n  useEffect(() => {\r\n    const checkAuth = async () => {\r\n      const token = authService.getToken();\r\n      \r\n      if (token) {\r\n        try {\r\n          dispatch({ type: AUTH_ACTIONS.SET_LOADING, payload: true });\r\n          const userData = await authService.getCurrentUser();\r\n          dispatch({ type: AUTH_ACTIONS.LOGIN_SUCCESS, payload: userData });\r\n        } catch (error) {\r\n          console.error('Auth check failed:', error);\r\n          authService.logout(); // Clear invalid token\r\n          dispatch({ type: AUTH_ACTIONS.LOGOUT });\r\n        }\r\n      } else {\r\n        dispatch({ type: AUTH_ACTIONS.SET_LOADING, payload: false });\r\n      }\r\n    };\r\n\r\n    checkAuth();\r\n  }, []);\r\n\r\n  // Login function\r\n  const login = async (email, password) => {\r\n    try {\r\n      dispatch({ type: AUTH_ACTIONS.SET_LOADING, payload: true });\r\n      dispatch({ type: AUTH_ACTIONS.CLEAR_ERROR });\r\n\r\n      const response = await authService.login(email, password);\r\n      \r\n      if (response.success) {\r\n        dispatch({ type: AUTH_ACTIONS.LOGIN_SUCCESS, payload: response.user });\r\n        return { success: true };\r\n      } else {\r\n        dispatch({ type: AUTH_ACTIONS.SET_ERROR, payload: response.message });\r\n        return { success: false, message: response.message };\r\n      }\r\n    } catch (error) {\r\n      const errorMessage = error.response?.data?.message || 'Login failed. Please try again.';\r\n      dispatch({ type: AUTH_ACTIONS.SET_ERROR, payload: errorMessage });\r\n      return { success: false, message: errorMessage };\r\n    }\r\n  };\r\n\r\n  // Register function\r\n  const register = async (userData) => {\r\n    try {\r\n      dispatch({ type: AUTH_ACTIONS.SET_LOADING, payload: true });\r\n      dispatch({ type: AUTH_ACTIONS.CLEAR_ERROR });\r\n\r\n      const response = await authService.register(userData);\r\n      \r\n      if (response.success) {\r\n        dispatch({ type: AUTH_ACTIONS.LOGIN_SUCCESS, payload: response.user });\r\n        return { success: true };\r\n      } else {\r\n        dispatch({ type: AUTH_ACTIONS.SET_ERROR, payload: response.message });\r\n        return { success: false, message: response.message };\r\n      }\r\n    } catch (error) {\r\n      const errorMessage = error.response?.data?.message || 'Registration failed. Please try again.';\r\n      dispatch({ type: AUTH_ACTIONS.SET_ERROR, payload: errorMessage });\r\n      return { success: false, message: errorMessage };\r\n    }\r\n  };\r\n\r\n  // Logout function\r\n  const logout = async () => {\r\n    try {\r\n      await authService.logout();\r\n    } catch (error) {\r\n      console.error('Logout error:', error);\r\n    }\r\n    dispatch({ type: AUTH_ACTIONS.LOGOUT });\r\n  };\r\n\r\n  // Update user profile\r\n  const updateUser = async (userData) => {\r\n    try {\r\n      dispatch({ type: AUTH_ACTIONS.CLEAR_ERROR });\r\n\r\n      const response = await authService.updateProfile(userData);\r\n      \r\n      if (response.success) {\r\n        dispatch({ type: AUTH_ACTIONS.UPDATE_USER, payload: response.user });\r\n        return { success: true };\r\n      } else {\r\n        dispatch({ type: AUTH_ACTIONS.SET_ERROR, payload: response.message });\r\n        return { success: false, message: response.message };\r\n      }\r\n    } catch (error) {\r\n      const errorMessage = error.response?.data?.message || 'Profile update failed. Please try again.';\r\n      dispatch({ type: AUTH_ACTIONS.SET_ERROR, payload: errorMessage });\r\n      return { success: false, message: errorMessage };\r\n    }\r\n  };\r\n\r\n  // Change password\r\n  const changePassword = async (currentPassword, newPassword) => {\r\n    try {\r\n      dispatch({ type: AUTH_ACTIONS.CLEAR_ERROR });\r\n\r\n      const response = await authService.changePassword(currentPassword, newPassword);\r\n      \r\n      if (response.success) {\r\n        return { success: true };\r\n      } else {\r\n        dispatch({ type: AUTH_ACTIONS.SET_ERROR, payload: response.message });\r\n        return { success: false, message: response.message };\r\n      }\r\n    } catch (error) {\r\n      const errorMessage = error.response?.data?.message || 'Password change failed. Please try again.';\r\n      dispatch({ type: AUTH_ACTIONS.SET_ERROR, payload: errorMessage });\r\n      return { success: false, message: errorMessage };\r\n    }\r\n  };\r\n\r\n  // Add learning language\r\n  const addLearningLanguage = async (language, level = 'beginner') => {\r\n    try {\r\n      dispatch({ type: AUTH_ACTIONS.CLEAR_ERROR });\r\n\r\n      const response = await authService.addLearningLanguage(language, level);\r\n      \r\n      if (response.success) {\r\n        dispatch({ type: AUTH_ACTIONS.UPDATE_USER, payload: response.user });\r\n        return { success: true };\r\n      } else {\r\n        dispatch({ type: AUTH_ACTIONS.SET_ERROR, payload: response.message });\r\n        return { success: false, message: response.message };\r\n      }\r\n    } catch (error) {\r\n      const errorMessage = error.response?.data?.message || 'Failed to add learning language. Please try again.';\r\n      dispatch({ type: AUTH_ACTIONS.SET_ERROR, payload: errorMessage });\r\n      return { success: false, message: errorMessage };\r\n    }\r\n  };\r\n\r\n  // Remove learning language\r\n  const removeLearningLanguage = async (language) => {\r\n    try {\r\n      dispatch({ type: AUTH_ACTIONS.CLEAR_ERROR });\r\n\r\n      const response = await authService.removeLearningLanguage(language);\r\n      \r\n      if (response.success) {\r\n        dispatch({ type: AUTH_ACTIONS.UPDATE_USER, payload: response.user });\r\n        return { success: true };\r\n      } else {\r\n        dispatch({ type: AUTH_ACTIONS.SET_ERROR, payload: response.message });\r\n        return { success: false, message: response.message };\r\n      }\r\n    } catch (error) {\r\n      const errorMessage = error.response?.data?.message || 'Failed to remove learning language. Please try again.';\r\n      dispatch({ type: AUTH_ACTIONS.SET_ERROR, payload: errorMessage });\r\n      return { success: false, message: errorMessage };\r\n    }\r\n  };\r\n\r\n  // Clear error\r\n  const clearError = () => {\r\n    dispatch({ type: AUTH_ACTIONS.CLEAR_ERROR });\r\n  };\r\n\r\n  // Context value\r\n  const value = {\r\n    user: state.user,\r\n    loading: state.loading,\r\n    error: state.error,\r\n    login,\r\n    register,\r\n    logout,\r\n    updateUser,\r\n    changePassword,\r\n    addLearningLanguage,\r\n    removeLearningLanguage,\r\n    clearError\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\n// Custom hook to use auth context\r\nexport const useAuth = () => {\r\n  const context = useContext(AuthContext);\r\n  \r\n  if (!context) {\r\n    throw new Error('useAuth must be used within an AuthProvider');\r\n  }\r\n  \r\n  return context;\r\n};\r\n\r\nexport default AuthContext;\r\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,UAAU,EAAEC,SAAS,QAAQ,OAAO;AAC/E,OAAOC,WAAW,MAAM,yBAAyB;;AAEjD;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,WAAW,gBAAGP,aAAa,CAAC,CAAC;;AAEnC;AACA,MAAMQ,YAAY,GAAG;EACnBC,WAAW,EAAE,aAAa;EAC1BC,aAAa,EAAE,eAAe;EAC9BC,MAAM,EAAE,QAAQ;EAChBC,WAAW,EAAE,aAAa;EAC1BC,SAAS,EAAE,WAAW;EACtBC,WAAW,EAAE;AACf,CAAC;;AAED;AACA,MAAMC,WAAW,GAAGA,CAACC,KAAK,EAAEC,MAAM,KAAK;EACrC,QAAQA,MAAM,CAACC,IAAI;IACjB,KAAKV,YAAY,CAACC,WAAW;MAC3B,OAAO;QACL,GAAGO,KAAK;QACRG,OAAO,EAAEF,MAAM,CAACG;MAClB,CAAC;IAEH,KAAKZ,YAAY,CAACE,aAAa;MAC7B,OAAO;QACL,GAAGM,KAAK;QACRK,IAAI,EAAEJ,MAAM,CAACG,OAAO;QACpBD,OAAO,EAAE,KAAK;QACdG,KAAK,EAAE;MACT,CAAC;IAEH,KAAKd,YAAY,CAACG,MAAM;MACtB,OAAO;QACL,GAAGK,KAAK;QACRK,IAAI,EAAE,IAAI;QACVF,OAAO,EAAE,KAAK;QACdG,KAAK,EAAE;MACT,CAAC;IAEH,KAAKd,YAAY,CAACI,WAAW;MAC3B,OAAO;QACL,GAAGI,KAAK;QACRK,IAAI,EAAE;UAAE,GAAGL,KAAK,CAACK,IAAI;UAAE,GAAGJ,MAAM,CAACG;QAAQ,CAAC;QAC1CE,KAAK,EAAE;MACT,CAAC;IAEH,KAAKd,YAAY,CAACK,SAAS;MACzB,OAAO;QACL,GAAGG,KAAK;QACRM,KAAK,EAAEL,MAAM,CAACG,OAAO;QACrBD,OAAO,EAAE;MACX,CAAC;IAEH,KAAKX,YAAY,CAACM,WAAW;MAC3B,OAAO;QACL,GAAGE,KAAK;QACRM,KAAK,EAAE;MACT,CAAC;IAEH;MACE,OAAON,KAAK;EAChB;AACF,CAAC;;AAED;AACA,MAAMO,YAAY,GAAG;EACnBF,IAAI,EAAE,IAAI;EACVF,OAAO,EAAE,IAAI;EACbG,KAAK,EAAE;AACT,CAAC;;AAED;AACA,OAAO,MAAME,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC5C,MAAM,CAACV,KAAK,EAAEW,QAAQ,CAAC,GAAGzB,UAAU,CAACa,WAAW,EAAEQ,YAAY,CAAC;;EAE/D;EACApB,SAAS,CAAC,MAAM;IACd,MAAMyB,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,MAAMC,KAAK,GAAGzB,WAAW,CAAC0B,QAAQ,CAAC,CAAC;MAEpC,IAAID,KAAK,EAAE;QACT,IAAI;UACFF,QAAQ,CAAC;YAAET,IAAI,EAAEV,YAAY,CAACC,WAAW;YAAEW,OAAO,EAAE;UAAK,CAAC,CAAC;UAC3D,MAAMW,QAAQ,GAAG,MAAM3B,WAAW,CAAC4B,cAAc,CAAC,CAAC;UACnDL,QAAQ,CAAC;YAAET,IAAI,EAAEV,YAAY,CAACE,aAAa;YAAEU,OAAO,EAAEW;UAAS,CAAC,CAAC;QACnE,CAAC,CAAC,OAAOT,KAAK,EAAE;UACdW,OAAO,CAACX,KAAK,CAAC,oBAAoB,EAAEA,KAAK,CAAC;UAC1ClB,WAAW,CAAC8B,MAAM,CAAC,CAAC,CAAC,CAAC;UACtBP,QAAQ,CAAC;YAAET,IAAI,EAAEV,YAAY,CAACG;UAAO,CAAC,CAAC;QACzC;MACF,CAAC,MAAM;QACLgB,QAAQ,CAAC;UAAET,IAAI,EAAEV,YAAY,CAACC,WAAW;UAAEW,OAAO,EAAE;QAAM,CAAC,CAAC;MAC9D;IACF,CAAC;IAEDQ,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMO,KAAK,GAAG,MAAAA,CAAOC,KAAK,EAAEC,QAAQ,KAAK;IACvC,IAAI;MACFV,QAAQ,CAAC;QAAET,IAAI,EAAEV,YAAY,CAACC,WAAW;QAAEW,OAAO,EAAE;MAAK,CAAC,CAAC;MAC3DO,QAAQ,CAAC;QAAET,IAAI,EAAEV,YAAY,CAACM;MAAY,CAAC,CAAC;MAE5C,MAAMwB,QAAQ,GAAG,MAAMlC,WAAW,CAAC+B,KAAK,CAACC,KAAK,EAAEC,QAAQ,CAAC;MAEzD,IAAIC,QAAQ,CAACC,OAAO,EAAE;QACpBZ,QAAQ,CAAC;UAAET,IAAI,EAAEV,YAAY,CAACE,aAAa;UAAEU,OAAO,EAAEkB,QAAQ,CAACjB;QAAK,CAAC,CAAC;QACtE,OAAO;UAAEkB,OAAO,EAAE;QAAK,CAAC;MAC1B,CAAC,MAAM;QACLZ,QAAQ,CAAC;UAAET,IAAI,EAAEV,YAAY,CAACK,SAAS;UAAEO,OAAO,EAAEkB,QAAQ,CAACE;QAAQ,CAAC,CAAC;QACrE,OAAO;UAAED,OAAO,EAAE,KAAK;UAAEC,OAAO,EAAEF,QAAQ,CAACE;QAAQ,CAAC;MACtD;IACF,CAAC,CAAC,OAAOlB,KAAK,EAAE;MAAA,IAAAmB,eAAA,EAAAC,oBAAA;MACd,MAAMC,YAAY,GAAG,EAAAF,eAAA,GAAAnB,KAAK,CAACgB,QAAQ,cAAAG,eAAA,wBAAAC,oBAAA,GAAdD,eAAA,CAAgBG,IAAI,cAAAF,oBAAA,uBAApBA,oBAAA,CAAsBF,OAAO,KAAI,iCAAiC;MACvFb,QAAQ,CAAC;QAAET,IAAI,EAAEV,YAAY,CAACK,SAAS;QAAEO,OAAO,EAAEuB;MAAa,CAAC,CAAC;MACjE,OAAO;QAAEJ,OAAO,EAAE,KAAK;QAAEC,OAAO,EAAEG;MAAa,CAAC;IAClD;EACF,CAAC;;EAED;EACA,MAAME,QAAQ,GAAG,MAAOd,QAAQ,IAAK;IACnC,IAAI;MACFJ,QAAQ,CAAC;QAAET,IAAI,EAAEV,YAAY,CAACC,WAAW;QAAEW,OAAO,EAAE;MAAK,CAAC,CAAC;MAC3DO,QAAQ,CAAC;QAAET,IAAI,EAAEV,YAAY,CAACM;MAAY,CAAC,CAAC;MAE5C,MAAMwB,QAAQ,GAAG,MAAMlC,WAAW,CAACyC,QAAQ,CAACd,QAAQ,CAAC;MAErD,IAAIO,QAAQ,CAACC,OAAO,EAAE;QACpBZ,QAAQ,CAAC;UAAET,IAAI,EAAEV,YAAY,CAACE,aAAa;UAAEU,OAAO,EAAEkB,QAAQ,CAACjB;QAAK,CAAC,CAAC;QACtE,OAAO;UAAEkB,OAAO,EAAE;QAAK,CAAC;MAC1B,CAAC,MAAM;QACLZ,QAAQ,CAAC;UAAET,IAAI,EAAEV,YAAY,CAACK,SAAS;UAAEO,OAAO,EAAEkB,QAAQ,CAACE;QAAQ,CAAC,CAAC;QACrE,OAAO;UAAED,OAAO,EAAE,KAAK;UAAEC,OAAO,EAAEF,QAAQ,CAACE;QAAQ,CAAC;MACtD;IACF,CAAC,CAAC,OAAOlB,KAAK,EAAE;MAAA,IAAAwB,gBAAA,EAAAC,qBAAA;MACd,MAAMJ,YAAY,GAAG,EAAAG,gBAAA,GAAAxB,KAAK,CAACgB,QAAQ,cAAAQ,gBAAA,wBAAAC,qBAAA,GAAdD,gBAAA,CAAgBF,IAAI,cAAAG,qBAAA,uBAApBA,qBAAA,CAAsBP,OAAO,KAAI,wCAAwC;MAC9Fb,QAAQ,CAAC;QAAET,IAAI,EAAEV,YAAY,CAACK,SAAS;QAAEO,OAAO,EAAEuB;MAAa,CAAC,CAAC;MACjE,OAAO;QAAEJ,OAAO,EAAE,KAAK;QAAEC,OAAO,EAAEG;MAAa,CAAC;IAClD;EACF,CAAC;;EAED;EACA,MAAMT,MAAM,GAAG,MAAAA,CAAA,KAAY;IACzB,IAAI;MACF,MAAM9B,WAAW,CAAC8B,MAAM,CAAC,CAAC;IAC5B,CAAC,CAAC,OAAOZ,KAAK,EAAE;MACdW,OAAO,CAACX,KAAK,CAAC,eAAe,EAAEA,KAAK,CAAC;IACvC;IACAK,QAAQ,CAAC;MAAET,IAAI,EAAEV,YAAY,CAACG;IAAO,CAAC,CAAC;EACzC,CAAC;;EAED;EACA,MAAMqC,UAAU,GAAG,MAAOjB,QAAQ,IAAK;IACrC,IAAI;MACFJ,QAAQ,CAAC;QAAET,IAAI,EAAEV,YAAY,CAACM;MAAY,CAAC,CAAC;MAE5C,MAAMwB,QAAQ,GAAG,MAAMlC,WAAW,CAAC6C,aAAa,CAAClB,QAAQ,CAAC;MAE1D,IAAIO,QAAQ,CAACC,OAAO,EAAE;QACpBZ,QAAQ,CAAC;UAAET,IAAI,EAAEV,YAAY,CAACI,WAAW;UAAEQ,OAAO,EAAEkB,QAAQ,CAACjB;QAAK,CAAC,CAAC;QACpE,OAAO;UAAEkB,OAAO,EAAE;QAAK,CAAC;MAC1B,CAAC,MAAM;QACLZ,QAAQ,CAAC;UAAET,IAAI,EAAEV,YAAY,CAACK,SAAS;UAAEO,OAAO,EAAEkB,QAAQ,CAACE;QAAQ,CAAC,CAAC;QACrE,OAAO;UAAED,OAAO,EAAE,KAAK;UAAEC,OAAO,EAAEF,QAAQ,CAACE;QAAQ,CAAC;MACtD;IACF,CAAC,CAAC,OAAOlB,KAAK,EAAE;MAAA,IAAA4B,gBAAA,EAAAC,qBAAA;MACd,MAAMR,YAAY,GAAG,EAAAO,gBAAA,GAAA5B,KAAK,CAACgB,QAAQ,cAAAY,gBAAA,wBAAAC,qBAAA,GAAdD,gBAAA,CAAgBN,IAAI,cAAAO,qBAAA,uBAApBA,qBAAA,CAAsBX,OAAO,KAAI,0CAA0C;MAChGb,QAAQ,CAAC;QAAET,IAAI,EAAEV,YAAY,CAACK,SAAS;QAAEO,OAAO,EAAEuB;MAAa,CAAC,CAAC;MACjE,OAAO;QAAEJ,OAAO,EAAE,KAAK;QAAEC,OAAO,EAAEG;MAAa,CAAC;IAClD;EACF,CAAC;;EAED;EACA,MAAMS,cAAc,GAAG,MAAAA,CAAOC,eAAe,EAAEC,WAAW,KAAK;IAC7D,IAAI;MACF3B,QAAQ,CAAC;QAAET,IAAI,EAAEV,YAAY,CAACM;MAAY,CAAC,CAAC;MAE5C,MAAMwB,QAAQ,GAAG,MAAMlC,WAAW,CAACgD,cAAc,CAACC,eAAe,EAAEC,WAAW,CAAC;MAE/E,IAAIhB,QAAQ,CAACC,OAAO,EAAE;QACpB,OAAO;UAAEA,OAAO,EAAE;QAAK,CAAC;MAC1B,CAAC,MAAM;QACLZ,QAAQ,CAAC;UAAET,IAAI,EAAEV,YAAY,CAACK,SAAS;UAAEO,OAAO,EAAEkB,QAAQ,CAACE;QAAQ,CAAC,CAAC;QACrE,OAAO;UAAED,OAAO,EAAE,KAAK;UAAEC,OAAO,EAAEF,QAAQ,CAACE;QAAQ,CAAC;MACtD;IACF,CAAC,CAAC,OAAOlB,KAAK,EAAE;MAAA,IAAAiC,gBAAA,EAAAC,qBAAA;MACd,MAAMb,YAAY,GAAG,EAAAY,gBAAA,GAAAjC,KAAK,CAACgB,QAAQ,cAAAiB,gBAAA,wBAAAC,qBAAA,GAAdD,gBAAA,CAAgBX,IAAI,cAAAY,qBAAA,uBAApBA,qBAAA,CAAsBhB,OAAO,KAAI,2CAA2C;MACjGb,QAAQ,CAAC;QAAET,IAAI,EAAEV,YAAY,CAACK,SAAS;QAAEO,OAAO,EAAEuB;MAAa,CAAC,CAAC;MACjE,OAAO;QAAEJ,OAAO,EAAE,KAAK;QAAEC,OAAO,EAAEG;MAAa,CAAC;IAClD;EACF,CAAC;;EAED;EACA,MAAMc,mBAAmB,GAAG,MAAAA,CAAOC,QAAQ,EAAEC,KAAK,GAAG,UAAU,KAAK;IAClE,IAAI;MACFhC,QAAQ,CAAC;QAAET,IAAI,EAAEV,YAAY,CAACM;MAAY,CAAC,CAAC;MAE5C,MAAMwB,QAAQ,GAAG,MAAMlC,WAAW,CAACqD,mBAAmB,CAACC,QAAQ,EAAEC,KAAK,CAAC;MAEvE,IAAIrB,QAAQ,CAACC,OAAO,EAAE;QACpBZ,QAAQ,CAAC;UAAET,IAAI,EAAEV,YAAY,CAACI,WAAW;UAAEQ,OAAO,EAAEkB,QAAQ,CAACjB;QAAK,CAAC,CAAC;QACpE,OAAO;UAAEkB,OAAO,EAAE;QAAK,CAAC;MAC1B,CAAC,MAAM;QACLZ,QAAQ,CAAC;UAAET,IAAI,EAAEV,YAAY,CAACK,SAAS;UAAEO,OAAO,EAAEkB,QAAQ,CAACE;QAAQ,CAAC,CAAC;QACrE,OAAO;UAAED,OAAO,EAAE,KAAK;UAAEC,OAAO,EAAEF,QAAQ,CAACE;QAAQ,CAAC;MACtD;IACF,CAAC,CAAC,OAAOlB,KAAK,EAAE;MAAA,IAAAsC,gBAAA,EAAAC,qBAAA;MACd,MAAMlB,YAAY,GAAG,EAAAiB,gBAAA,GAAAtC,KAAK,CAACgB,QAAQ,cAAAsB,gBAAA,wBAAAC,qBAAA,GAAdD,gBAAA,CAAgBhB,IAAI,cAAAiB,qBAAA,uBAApBA,qBAAA,CAAsBrB,OAAO,KAAI,oDAAoD;MAC1Gb,QAAQ,CAAC;QAAET,IAAI,EAAEV,YAAY,CAACK,SAAS;QAAEO,OAAO,EAAEuB;MAAa,CAAC,CAAC;MACjE,OAAO;QAAEJ,OAAO,EAAE,KAAK;QAAEC,OAAO,EAAEG;MAAa,CAAC;IAClD;EACF,CAAC;;EAED;EACA,MAAMmB,sBAAsB,GAAG,MAAOJ,QAAQ,IAAK;IACjD,IAAI;MACF/B,QAAQ,CAAC;QAAET,IAAI,EAAEV,YAAY,CAACM;MAAY,CAAC,CAAC;MAE5C,MAAMwB,QAAQ,GAAG,MAAMlC,WAAW,CAAC0D,sBAAsB,CAACJ,QAAQ,CAAC;MAEnE,IAAIpB,QAAQ,CAACC,OAAO,EAAE;QACpBZ,QAAQ,CAAC;UAAET,IAAI,EAAEV,YAAY,CAACI,WAAW;UAAEQ,OAAO,EAAEkB,QAAQ,CAACjB;QAAK,CAAC,CAAC;QACpE,OAAO;UAAEkB,OAAO,EAAE;QAAK,CAAC;MAC1B,CAAC,MAAM;QACLZ,QAAQ,CAAC;UAAET,IAAI,EAAEV,YAAY,CAACK,SAAS;UAAEO,OAAO,EAAEkB,QAAQ,CAACE;QAAQ,CAAC,CAAC;QACrE,OAAO;UAAED,OAAO,EAAE,KAAK;UAAEC,OAAO,EAAEF,QAAQ,CAACE;QAAQ,CAAC;MACtD;IACF,CAAC,CAAC,OAAOlB,KAAK,EAAE;MAAA,IAAAyC,gBAAA,EAAAC,qBAAA;MACd,MAAMrB,YAAY,GAAG,EAAAoB,gBAAA,GAAAzC,KAAK,CAACgB,QAAQ,cAAAyB,gBAAA,wBAAAC,qBAAA,GAAdD,gBAAA,CAAgBnB,IAAI,cAAAoB,qBAAA,uBAApBA,qBAAA,CAAsBxB,OAAO,KAAI,uDAAuD;MAC7Gb,QAAQ,CAAC;QAAET,IAAI,EAAEV,YAAY,CAACK,SAAS;QAAEO,OAAO,EAAEuB;MAAa,CAAC,CAAC;MACjE,OAAO;QAAEJ,OAAO,EAAE,KAAK;QAAEC,OAAO,EAAEG;MAAa,CAAC;IAClD;EACF,CAAC;;EAED;EACA,MAAMsB,UAAU,GAAGA,CAAA,KAAM;IACvBtC,QAAQ,CAAC;MAAET,IAAI,EAAEV,YAAY,CAACM;IAAY,CAAC,CAAC;EAC9C,CAAC;;EAED;EACA,MAAMoD,KAAK,GAAG;IACZ7C,IAAI,EAAEL,KAAK,CAACK,IAAI;IAChBF,OAAO,EAAEH,KAAK,CAACG,OAAO;IACtBG,KAAK,EAAEN,KAAK,CAACM,KAAK;IAClBa,KAAK;IACLU,QAAQ;IACRX,MAAM;IACNc,UAAU;IACVI,cAAc;IACdK,mBAAmB;IACnBK,sBAAsB;IACtBG;EACF,CAAC;EAED,oBACE3D,OAAA,CAACC,WAAW,CAAC4D,QAAQ;IAACD,KAAK,EAAEA,KAAM;IAAAzC,QAAA,EAChCA;EAAQ;IAAA2C,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;;AAED;AAAA7C,EAAA,CA9LaF,YAAY;AAAAgD,EAAA,GAAZhD,YAAY;AA+LzB,OAAO,MAAMiD,OAAO,GAAGA,CAAA,KAAM;EAAAC,GAAA;EAC3B,MAAMC,OAAO,GAAG1E,UAAU,CAACM,WAAW,CAAC;EAEvC,IAAI,CAACoE,OAAO,EAAE;IACZ,MAAM,IAAIC,KAAK,CAAC,6CAA6C,CAAC;EAChE;EAEA,OAAOD,OAAO;AAChB,CAAC;AAACD,GAAA,CARWD,OAAO;AAUpB,eAAelE,WAAW;AAAC,IAAAiE,EAAA;AAAAK,YAAA,CAAAL,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}